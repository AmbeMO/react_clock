{"version":3,"sources":["components/clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","timeGo","console","log","toLocaleTimeString","clearInterval","setState","React","Component","App","isClockVisible","clockName","showTimer","hideTimer","getRandomClockName","randomClockName","String","Math","floor","random","className","name","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAQaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAqB,KALvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAGLC,QAAQC,IAAR,eAAqB,EAAKR,MAAMC,KAAMQ,yBACrC,OAbP,kCAgBE,WACML,KAAKD,SACPO,cAAcN,KAAKD,WAlBzB,oBAsBE,WACEC,KAAKO,SAAS,CACZV,KAAM,IAAIC,SAxBhB,oBA4BE,WACE,OACE,mCACGE,KAAKJ,MAAMC,KAAKQ,2BA/BzB,GAA2BG,IAAMC,WCJ3BC,E,4MACJd,MAAQ,CACNe,gBAAgB,EAChBC,UAAW,W,EAGbC,UAAY,WACV,EAAKN,SAAS,CACZI,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKP,SAAS,CACZI,gBAAgB,K,EAIpBI,mBAAqB,WACnB,IAAMC,EAAkBC,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAE/C,EAAKb,SAAS,CACZK,UAAWI,IAGbb,QAAQC,IAAI,WAAaY,I,4CAG3B,WACE,MAGIhB,KAAKJ,MAFPe,EADF,EACEA,eACAC,EAFF,EAEEA,UAGF,OACE,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAGA,UAAU,cAAc,UAAQ,OAAnC,UAEIV,EACI,cAAC,EAAD,CAAOW,KAAMV,IACb,KAEL,OACD,sBAAMS,UAAU,cAAhB,SAA+BT,OAGjC,wBACEW,KAAK,SACLF,UAAU,gBACVG,QAASxB,KAAKa,UACdY,SAAUd,EAJZ,kBAQC,IACD,wBACEY,KAAK,SACLF,UAAU,gBACVG,QAASxB,KAAKc,UACdW,UAAWd,EAJb,kBAQC,IACD,wBACEY,KAAK,SACLF,UAAU,gBACVG,QAASxB,KAAKe,mBAHhB,wC,GAjEQP,IAAMC,WA8ETC,IC/EfgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c97b32eb.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockTime = NodeJS.Timer | null;\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: ClockTime = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.timeGo();\n\n      // eslint-disable-next-line\n      console.log(`time ${(this.state.date).toLocaleTimeString()}`);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  timeGo() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'default',\n  };\n\n  showTimer = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideTimer = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  getRandomClockName = () => {\n    const randomClockName = String(Math.floor(Math.random() * 1000));\n\n    this.setState({\n      clockName: randomClockName,\n    });\n    // eslint-disable-next-line\n    console.log('New name' + randomClockName);\n  };\n\n  render() {\n    const {\n      isClockVisible,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"clock\">\n          <p className=\"clock__time\" data-cy=\"time\">\n            {\n              isClockVisible\n                ? <Clock name={clockName} />\n                : null\n            }\n            {'    '}\n            <span className=\"clock__name\">{clockName}</span>\n\n          </p>\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.showTimer}\n            disabled={isClockVisible}\n          >\n            Show\n          </button>\n          {' '}\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.hideTimer}\n            disabled={!isClockVisible}\n          >\n            Hide\n          </button>\n          {' '}\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.getRandomClockName}\n          >\n            Random clock name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}